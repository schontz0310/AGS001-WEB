[{"C:\\projetos\\AGS001\\web\\src\\hook\\auth.tsx":"1","C:\\projetos\\AGS001\\web\\src\\pages\\SignIn\\styles.ts":"2","C:\\projetos\\AGS001\\web\\src\\routes\\Route.tsx":"3","C:\\projetos\\AGS001\\web\\src\\hook\\toast.tsx":"4","C:\\projetos\\AGS001\\web\\src\\pages\\SignIn\\index.tsx":"5","C:\\projetos\\AGS001\\web\\src\\components\\Modal\\index.tsx":"6","C:\\projetos\\AGS001\\web\\src\\components\\Modal\\ModalAdmin\\index.tsx":"7","C:\\projetos\\AGS001\\web\\src\\components\\Modal\\ModalAdmin\\styles.ts":"8"},{"size":2419,"mtime":1612747378318,"results":"9","hashOfConfig":"10"},{"size":2869,"mtime":1612792494607,"results":"11","hashOfConfig":"12"},{"size":954,"mtime":1612747378327,"results":"13","hashOfConfig":"10"},{"size":1505,"mtime":1612747378319,"results":"14","hashOfConfig":"10"},{"size":3418,"mtime":1612792348003,"results":"15","hashOfConfig":"12"},{"size":1046,"mtime":1612790388888,"results":"16","hashOfConfig":"12"},{"size":1318,"mtime":1612786353467,"results":"17","hashOfConfig":"12"},{"size":737,"mtime":1612790204393,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1h5kwkw",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vyeu8h",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projetos\\AGS001\\web\\src\\hook\\auth.tsx",[],["36","37","38","39","40"],"C:\\projetos\\AGS001\\web\\src\\pages\\SignIn\\styles.ts",[],"C:\\projetos\\AGS001\\web\\src\\routes\\Route.tsx",[],"C:\\projetos\\AGS001\\web\\src\\hook\\toast.tsx",[],"C:\\projetos\\AGS001\\web\\src\\pages\\SignIn\\index.tsx",[],"C:\\projetos\\AGS001\\web\\src\\components\\Modal\\index.tsx",["41"],"C:\\projetos\\AGS001\\web\\src\\components\\Modal\\ModalAdmin\\index.tsx",[],"C:\\projetos\\AGS001\\web\\src\\components\\Modal\\ModalAdmin\\styles.ts",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":8,"column":13,"nodeType":"54","messageId":"55","endLine":8,"endColumn":16,"suggestions":"56"},"lines-around-directive",["57"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["58","59"],"padding-line-between-statements",{"messageId":"60","fix":"61","desc":"62"},{"messageId":"63","fix":"64","desc":"65"},"suggestUnknown",{"range":"66","text":"67"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"66","text":"68"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[130,133],"unknown","never"]